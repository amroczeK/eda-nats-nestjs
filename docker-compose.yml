version: '3.9'

services:
  db:
    image: postgres:latest
    container_name: shopdb
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - 5432:5432
    volumes:
      - ./volumes/postgresdata:/var/lib/postgresql/data

  nats:
    image: nats:latest
    container_name: nats-server
    expose:
      - 8222
    ports:
      - 4222:4222
      - 8222:8222

  intermediary-service:
    build:
      context: .
      dockerfile: ./apps/intermediary-service/Dockerfile
      target: development
    command: npm run start:dev intermediary-service
    hostname: intermediary-service
    container_name: intermediary-service
    depends_on:
      nats:
        condition: service_started
        restart: true
    ports:
      - 3000:3000
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  order-service:
    build:
      context: .
      dockerfile: ./apps/order-service/Dockerfile
      target: development
    command: npm run start:dev order-service
    hostname: order-service
    container_name: order-service
    depends_on:
      nats:
        condition: service_started
        restart: true
      db:
        condition: service_started
      inventory-service:
        condition: service_started
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - ./apps/order-service/.env

  inventory-service:
    build:
      context: .
      dockerfile: ./apps/inventory-service/Dockerfile
      target: development
    command: npm run start:dev inventory-service
    hostname: inventory-service
    container_name: inventory-service
    depends_on:
      nats:
        condition: service_started
        restart: true
      db:
        condition: service_started
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - ./apps/inventory-service/.env

  logging-service:
    build:
      context: .
      dockerfile: ./apps/logging-service/Dockerfile
      target: development
    command: npm run start:dev logging-service
    hostname: logging-service
    container_name: logging-service
    depends_on:
      nats:
        condition: service_started
        restart: true
      db:
        condition: service_started
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - ./apps/logging-service/.env
